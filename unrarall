#!/bin/bash

#unrarall
# Copyright (C) 2011 Brendan Le Foll - brendan@fridu.net
#
# This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
##########################################################################

# Set some defaults
declare -x DIR="`pwd`"
declare -x CLEAN=false
declare -rx UNRARALL_VERSION="0.2"

function usage() 
{
  echo "Usage: unrarall -d <dir> [-c | --clean] [-f | --force] [-v | --version]
               unrarall [-h | --help]

DESCRIPTON
unrarall is a utility to unrar and cleanup (delete) all files within a directory. Use -c if you want to cleanup. Otherwise no cleaning is done. 

OPTIONS

-h, --help    Displays this help message and exits.
-c, --clean   Clean after unrar
-d, --dir     Specify directory. Otherwise 'pwd' is used
-f, --force   Force clean. Even if unrar fails, clean. Implies -c
-v, --version Give version information version

LICENSE
COPYRIGHT (C) 2011 Brendan Le Foll
This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

VERSION: $UNRARALL_VERSION

ACKNOWLEDGEMENTS: Name and idea comes from "jeremy" see - http://askubuntu.com/questions/7059/script-app-to-unrar-files-and-only-delete-the-archives-which-were-sucessfully 
"
}

# Parse command line arguments
while [ -n "$1" ]; do
  case "$1" in
    -h | --help )  
    	usage	
        exit 0
        ;;
    -v | --version )  
    	echo "$UNRARALL_VERSION"
        exit 0
        ;;
    -d | --dir )  
    	shift
	DIR="$1"
        ;;
    -c | --clean )  
    	CLEAN=true
        ;;
    -f | --force )  
    	FORCE_CLEAN=1
        CLEAN=true
        ;;
    *)	
    	# user issued unrecognised option
	echo -e "Unrecognised option: $1 \n"
        usage
        exit 1
        ;;
  esac
  shift
done

# Current Dir check
if [ "${DIR}" == "." ]; then
  DIR="`pwd`"
  echo "${DIR}"
fi

# Check unrar is available
if ! type -P unrar >/dev/null; then
  echo "Please install unrar or check your \$PATH" 2>&1
  exit 1;
fi

# Check $DIR exists and is a directory
if [ -d "$DIR" ]; then
  DIR="`pwd`"
  echo "Working over directory - ${DIR}"
else
  echo "Cannot find directory \"${DIR}\"" 2>&1
  exit 1;
fi

# Check if there is an "unrar" running already, if so, exit
if ps -ef | grep -v grep | grep -v unrarall | grep unrar ; then
  echo "unrar is allready running. Please only run this script once"
  exit 0
fi

CURRENT_DIR=`pwd`

#find all files 
COUNT=0
COMMAND="find "$DIR" -name *.rar"

#modify IFS for new lines so filenames with spaces do not get split
IFS_TEMP=$IFS
IFS=$(echo -en "\n\b")

for file in `find "$DIR" -name *.rar`; do
  let COUNT=COUNT+1
  echo $file
  # move to directory
  filename=`basename "$file"`
  dirname=`dirname "$file"`
  extension="${filename##*.}"
  sfilename="${filename%.*}"
  cd "$dirname"
  # unrar file with unrar e
  unrar -y -o- e "$filename" >/dev/null
  SUCCESS=$?
  # if fail remove from count
  if [ "$SUCCESS" -ne "0" ]; then
    let COUNT=COUNT-1
    echo "Extract of $file failed"
  fi
  # cleanup all .rar/.r[0-9][0-9]/
  if $CLEAN ; then
    if [ "$SUCCESS" -eq "0" ] || [ "$FORCE_CLEAN" -eq "1" ]; then
      echo "Cleaning $file"
      rm "${sfilename}".rar 2>/dev/null
      rm "${sfilename}".r[0-9][0-9] 2>/dev/null
    fi
  fi
  cd "$CURRENT_DIR"
done
IFS=$IFS_TEMP

#If success
if [ "$COUNT" -ne "0" ]; then
  EXIT_PHRASE="found and extracted"
  if $CLEAN; then
    EXIT_PHRASE="found, extracted and removed"
  fi
  echo "$COUNT rar files $EXIT_PHRASE"
else
  echo "no rar files extracted"
fi
